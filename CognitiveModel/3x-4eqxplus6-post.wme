(require* wmeTypes "wmeTypes.clp")



(assert (MAIN::initial-fact))   ; probably don't need this, but does not hurt

(bind ?*n* 1)   ; used to number facts so that a newly asserted fact is never a duplicate



;;-------------------------------------------------------------------------------------

;;

;; Template for equations of the form ax + b = cx + d



;;-------------------------------------------------------------------------------------

;;

;; To create new problem of the form solve ax + b = cx + d, only edit this part

;;



(bind ?a 3)

(bind ?b -4)

(bind ?c 1)

(bind ?d 6)

(bind ?var "x")



(bind ?start-left-str "3x - 4")    ; this should be literally what is in the interface in the start state

(bind ?start-right-str "x + 6")       ; ditto





;;-------------------------------------------------------------------------------------

;;

;; Create facts representing the equation

;;



(bind ?ax-term (assert (simple-term (coeff ?a)(var ?var))))

(bind ?b-term (assert (simple-term (coeff ?b))))

(bind ?cx-term (assert (simple-term (coeff ?c)(var ?var))))

(bind ?d-term (assert (simple-term (coeff ?d))))

(bind ?left-expr (assert (expr (terms ?ax-term ?b-term))))

(bind ?right-expr (assert (expr (terms ?cx-term ?d-term))))

(bind ?eq (assert (equation (sides ?left-expr ?right-expr))))



;;-------------------------------------------------------------------------------------

;;

;; Now store equation in problem fact, which is created in productionRules.pr (because

;;    the interface facts are the same for every problem)

;;



(modify ?this-problem (cur-equation ?eq))



(bind ?start-left (assert (interface-element (name startLeft)(value ?start-left-str))))

(bind ?start-right (assert (interface-element (name startRight)(value ?start-right-str))))

(bind ?start-line (assert (line (solution-steps ?start-left ?start-right))))



(modify ?this-problem (closed-lines ?start-line))  ; this is for the reorder rule



(modify ?this-problem  (post-explanations-p TRUE))

