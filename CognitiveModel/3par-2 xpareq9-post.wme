(require* wmeTypes "wmeTypes.clp")

(assert (MAIN::initial-fact))   ; probably don't need this, but does not hurt
(bind ?*n* 1)   ; used to number facts so that a newly asserted fact is never a duplicate

;;-------------------------------------------------------------------------------------
;;
;; Template for equations of the form a(b + cx) = d 

;;-------------------------------------------------------------------------------------
;;
;; To create new problem of the form solve a(b + cx) = d, only edit this part
;;

(bind ?a 3)
(bind ?b -2)
(bind ?c 1)
(bind ?d 9)
(bind ?var "x")

(bind ?start-left-str "3(-2 + x)")    ; this should be literally what is in the interface in the start state
(bind ?start-right-str "9")       ; ditto


;;-------------------------------------------------------------------------------------
;;
;; Create facts representing the equation
;;

(bind ?a-term (assert (simple-term (coeff ?a))))
(bind ?a-expr (assert (expr (terms ?a-term))))
(bind ?b-term (assert (simple-term (coeff ?b))))
(bind ?cx-term (assert (simple-term (coeff ?c)(var ?var))))
(bind ?bxc-expr (assert (expr (terms ?b-term ?cx-term))))
(bind ?abcx-term (assert (product-term (factors ?a-expr ?bxc-expr))))
(bind ?d-term (assert (simple-term (coeff ?d))))
(bind ?left-expr (assert (expr (terms ?abcx-term))))
(bind ?right-expr (assert (expr (terms ?d-term))))
(bind ?eq (assert (equation (sides ?left-expr ?right-expr))))

;;-------------------------------------------------------------------------------------
;;
;; Now store equation in problem fact, which is created in productionRules.pr (because
;;    the interface facts are the same for every problem)
;;

(modify ?this-problem (cur-equation ?eq))

(bind ?start-left (assert (interface-element (name startLeft)(value ?start-left-str))))
(bind ?start-right (assert (interface-element (name startRight)(value ?start-right-str))))
(bind ?start-line (assert (line (solution-steps ?start-left ?start-right))))

(modify ?this-problem (closed-lines ?start-line))  ; this is for the reorder rule

(modify ?this-problem  (post-explanations-p TRUE))
